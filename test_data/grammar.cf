#Example: algebric expression evaluator
#<delim>:"\s"

Num: "[0-9]+"
OpExpr: '+' | '-'
OpProduct: '*' | '/'

!Formula():
    expansion:
        result = Expr()
    end:
    {
        print(result)
    }

Expr():
    begin: {
        a = 0
        b = 0
        op = '+'
    }
    expansion:
        a = Term() |
        a = Expr(), op = OpExpr, b = Term()
    end:
    {
        if op == '+':
            return a + b
        else:
            return a - b
    }

Term():
    begin: {
        a = 0
        b = 1
        op = '*'
    }
    expansion:
        a = Factor() |
        a = Term(), op = OpProduct, b = Factor()
    end: {
        if op == '*':
            return a * b
        else:
            return a / b
    }

Factor():
    expansion:
        a = Number() |
        '(', a = Expr(), ')'
    end: {
        return a
    }

Number():
    expansion:
        num = Num
    end: {
        return int(num)
    }